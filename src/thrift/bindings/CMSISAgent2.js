//
// Autogenerated by Thrift Compiler (0.14.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;
var Int64 = require('node-int64');

var shared_ttypes = require('./shared_types');


var HeartbeatService = require('./HeartbeatService');
var HeartbeatServiceClient = HeartbeatService.Client;
var HeartbeatServiceProcessor = HeartbeatService.Processor;
var ttypes = require('./cmsisagent_types');
//HELPER FUNCTIONS AND STRUCTURES

var CMSISAgent2_loadProject_args = function(args) {
  this.ewpfile = null;
  this.rteConfigFile = null;
  if (args) {
    if (args.ewpfile !== undefined && args.ewpfile !== null) {
      this.ewpfile = args.ewpfile;
    }
    if (args.rteConfigFile !== undefined && args.rteConfigFile !== null) {
      this.rteConfigFile = args.rteConfigFile;
    }
  }
};
CMSISAgent2_loadProject_args.prototype = {};
CMSISAgent2_loadProject_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.ewpfile = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.rteConfigFile = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_loadProject_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_loadProject_args');
  if (this.ewpfile !== null && this.ewpfile !== undefined) {
    output.writeFieldBegin('ewpfile', Thrift.Type.STRING, 1);
    output.writeString(this.ewpfile);
    output.writeFieldEnd();
  }
  if (this.rteConfigFile !== null && this.rteConfigFile !== undefined) {
    output.writeFieldBegin('rteConfigFile', Thrift.Type.STRING, 2);
    output.writeString(this.rteConfigFile);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_loadProject_result = function(args) {
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_loadProject_result.prototype = {};
CMSISAgent2_loadProject_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_loadProject_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_loadProject_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_createNewProject_args = function(args) {
  this.ewpfile = null;
  this.outputType = null;
  if (args) {
    if (args.ewpfile !== undefined && args.ewpfile !== null) {
      this.ewpfile = args.ewpfile;
    }
    if (args.outputType !== undefined && args.outputType !== null) {
      this.outputType = args.outputType;
    }
  }
};
CMSISAgent2_createNewProject_args.prototype = {};
CMSISAgent2_createNewProject_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.ewpfile = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.outputType = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_createNewProject_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_createNewProject_args');
  if (this.ewpfile !== null && this.ewpfile !== undefined) {
    output.writeFieldBegin('ewpfile', Thrift.Type.STRING, 1);
    output.writeString(this.ewpfile);
    output.writeFieldEnd();
  }
  if (this.outputType !== null && this.outputType !== undefined) {
    output.writeFieldBegin('outputType', Thrift.Type.I32, 2);
    output.writeI32(this.outputType);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_createNewProject_result = function(args) {
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_createNewProject_result.prototype = {};
CMSISAgent2_createNewProject_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_createNewProject_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_createNewProject_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_shutdown_args = function(args) {
};
CMSISAgent2_shutdown_args.prototype = {};
CMSISAgent2_shutdown_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_shutdown_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_shutdown_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_shutdown_result = function(args) {
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_shutdown_result.prototype = {};
CMSISAgent2_shutdown_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_shutdown_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_shutdown_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_activate_args = function(args) {
  this.project = null;
  if (args) {
    if (args.project !== undefined && args.project !== null) {
      this.project = args.project;
    }
  }
};
CMSISAgent2_activate_args.prototype = {};
CMSISAgent2_activate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.project = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_activate_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_activate_args');
  if (this.project !== null && this.project !== undefined) {
    output.writeFieldBegin('project', Thrift.Type.STRING, 1);
    output.writeString(this.project);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_activate_result = function(args) {
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_activate_result.prototype = {};
CMSISAgent2_activate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_activate_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_activate_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getComponentInfo_args = function(args) {
  this.rte = null;
  if (args) {
    if (args.rte !== undefined && args.rte !== null) {
      this.rte = args.rte;
    }
  }
};
CMSISAgent2_getComponentInfo_args.prototype = {};
CMSISAgent2_getComponentInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.rte = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getComponentInfo_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getComponentInfo_args');
  if (this.rte !== null && this.rte !== undefined) {
    output.writeFieldBegin('rte', Thrift.Type.STRING, 1);
    output.writeString(this.rte);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getComponentInfo_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.ComponentInfo]);
    }
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_getComponentInfo_result.prototype = {};
CMSISAgent2_getComponentInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp326 = input.readListBegin();
        var _size25 = _rtmp326.size || 0;
        for (var _i27 = 0; _i27 < _size25; ++_i27) {
          var elem28 = null;
          elem28 = new ttypes.ComponentInfo();
          elem28.read(input);
          this.success.push(elem28);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getComponentInfo_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getComponentInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter29 in this.success) {
      if (this.success.hasOwnProperty(iter29)) {
        iter29 = this.success[iter29];
        iter29.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getValidationStatus_args = function(args) {
  this.rte = null;
  if (args) {
    if (args.rte !== undefined && args.rte !== null) {
      this.rte = args.rte;
    }
  }
};
CMSISAgent2_getValidationStatus_args.prototype = {};
CMSISAgent2_getValidationStatus_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.rte = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getValidationStatus_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getValidationStatus_args');
  if (this.rte !== null && this.rte !== undefined) {
    output.writeFieldBegin('rte', Thrift.Type.STRING, 1);
    output.writeString(this.rte);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getValidationStatus_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.ValidationStatus]);
    }
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_getValidationStatus_result.prototype = {};
CMSISAgent2_getValidationStatus_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp331 = input.readListBegin();
        var _size30 = _rtmp331.size || 0;
        for (var _i32 = 0; _i32 < _size30; ++_i32) {
          var elem33 = null;
          elem33 = new ttypes.ValidationStatus();
          elem33.read(input);
          this.success.push(elem33);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getValidationStatus_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getValidationStatus_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter34 in this.success) {
      if (this.success.hasOwnProperty(iter34)) {
        iter34 = this.success[iter34];
        iter34.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getApis_args = function(args) {
  this.rte = null;
  if (args) {
    if (args.rte !== undefined && args.rte !== null) {
      this.rte = args.rte;
    }
  }
};
CMSISAgent2_getApis_args.prototype = {};
CMSISAgent2_getApis_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.rte = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getApis_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getApis_args');
  if (this.rte !== null && this.rte !== undefined) {
    output.writeFieldBegin('rte', Thrift.Type.STRING, 1);
    output.writeString(this.rte);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getApis_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.Api]);
    }
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_getApis_result.prototype = {};
CMSISAgent2_getApis_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp336 = input.readListBegin();
        var _size35 = _rtmp336.size || 0;
        for (var _i37 = 0; _i37 < _size35; ++_i37) {
          var elem38 = null;
          elem38 = new ttypes.Api();
          elem38.read(input);
          this.success.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getApis_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getApis_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter39 in this.success) {
      if (this.success.hasOwnProperty(iter39)) {
        iter39 = this.success[iter39];
        iter39.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getDeviceInfo_args = function(args) {
  this.rte = null;
  if (args) {
    if (args.rte !== undefined && args.rte !== null) {
      this.rte = args.rte;
    }
  }
};
CMSISAgent2_getDeviceInfo_args.prototype = {};
CMSISAgent2_getDeviceInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.rte = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getDeviceInfo_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getDeviceInfo_args');
  if (this.rte !== null && this.rte !== undefined) {
    output.writeFieldBegin('rte', Thrift.Type.STRING, 1);
    output.writeString(this.rte);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getDeviceInfo_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.DeviceInfo(args.success);
    }
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_getDeviceInfo_result.prototype = {};
CMSISAgent2_getDeviceInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.DeviceInfo();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getDeviceInfo_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getDeviceInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getPathToPack_args = function(args) {
  this.packId = null;
  if (args) {
    if (args.packId !== undefined && args.packId !== null) {
      this.packId = args.packId;
    }
  }
};
CMSISAgent2_getPathToPack_args.prototype = {};
CMSISAgent2_getPathToPack_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.packId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getPathToPack_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getPathToPack_args');
  if (this.packId !== null && this.packId !== undefined) {
    output.writeFieldBegin('packId', Thrift.Type.STRING, 1);
    output.writeString(this.packId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getPathToPack_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_getPathToPack_result.prototype = {};
CMSISAgent2_getPathToPack_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getPathToPack_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getPathToPack_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getPackIdFromPath_args = function(args) {
  this.fileInPack = null;
  if (args) {
    if (args.fileInPack !== undefined && args.fileInPack !== null) {
      this.fileInPack = args.fileInPack;
    }
  }
};
CMSISAgent2_getPackIdFromPath_args.prototype = {};
CMSISAgent2_getPackIdFromPath_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.fileInPack = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getPackIdFromPath_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getPackIdFromPath_args');
  if (this.fileInPack !== null && this.fileInPack !== undefined) {
    output.writeFieldBegin('fileInPack', Thrift.Type.STRING, 1);
    output.writeString(this.fileInPack);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getPackIdFromPath_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.FileInPack(args.success);
    }
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_getPackIdFromPath_result.prototype = {};
CMSISAgent2_getPackIdFromPath_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.FileInPack();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getPackIdFromPath_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getPackIdFromPath_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getRteFiles_args = function(args) {
  this.projectName = null;
  if (args) {
    if (args.projectName !== undefined && args.projectName !== null) {
      this.projectName = args.projectName;
    }
  }
};
CMSISAgent2_getRteFiles_args.prototype = {};
CMSISAgent2_getRteFiles_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.projectName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getRteFiles_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getRteFiles_args');
  if (this.projectName !== null && this.projectName !== undefined) {
    output.writeFieldBegin('projectName', Thrift.Type.STRING, 1);
    output.writeString(this.projectName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_getRteFiles_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.RteFile]);
    }
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_getRteFiles_result.prototype = {};
CMSISAgent2_getRteFiles_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp341 = input.readListBegin();
        var _size40 = _rtmp341.size || 0;
        for (var _i42 = 0; _i42 < _size40; ++_i42) {
          var elem43 = null;
          elem43 = new ttypes.RteFile();
          elem43.read(input);
          this.success.push(elem43);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_getRteFiles_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_getRteFiles_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter44 in this.success) {
      if (this.success.hasOwnProperty(iter44)) {
        iter44 = this.success[iter44];
        iter44.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_openDeviceDialog_args = function(args) {
  this.projectName = null;
  if (args) {
    if (args.projectName !== undefined && args.projectName !== null) {
      this.projectName = args.projectName;
    }
  }
};
CMSISAgent2_openDeviceDialog_args.prototype = {};
CMSISAgent2_openDeviceDialog_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.projectName = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_openDeviceDialog_args.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_openDeviceDialog_args');
  if (this.projectName !== null && this.projectName !== undefined) {
    output.writeFieldBegin('projectName', Thrift.Type.STRING, 1);
    output.writeString(this.projectName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2_openDeviceDialog_result = function(args) {
  this.e = null;
  if (args instanceof ttypes.CMSISAgentException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined && args.e !== null) {
      this.e = args.e;
    }
  }
};
CMSISAgent2_openDeviceDialog_result.prototype = {};
CMSISAgent2_openDeviceDialog_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new ttypes.CMSISAgentException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CMSISAgent2_openDeviceDialog_result.prototype.write = function(output) {
  output.writeStructBegin('CMSISAgent2_openDeviceDialog_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CMSISAgent2Client = exports.Client = function(output, pClass) {
  this.output = output;
  this.pClass = pClass;
  this._seqid = 0;
  this._reqs = {};
};
Thrift.inherits(CMSISAgent2Client, HeartbeatServiceClient);
CMSISAgent2Client.prototype.seqid = function() { return this._seqid; };
CMSISAgent2Client.prototype.new_seqid = function() { return this._seqid += 1; };

CMSISAgent2Client.prototype.loadProject = function(ewpfile, rteConfigFile, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_loadProject(ewpfile, rteConfigFile);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_loadProject(ewpfile, rteConfigFile);
  }
};

CMSISAgent2Client.prototype.send_loadProject = function(ewpfile, rteConfigFile) {
  var output = new this.pClass(this.output);
  var params = {
    ewpfile: ewpfile,
    rteConfigFile: rteConfigFile
  };
  var args = new CMSISAgent2_loadProject_args(params);
  try {
    output.writeMessageBegin('loadProject', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_loadProject = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_loadProject_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  callback(null);
};

CMSISAgent2Client.prototype.createNewProject = function(ewpfile, outputType, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_createNewProject(ewpfile, outputType);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_createNewProject(ewpfile, outputType);
  }
};

CMSISAgent2Client.prototype.send_createNewProject = function(ewpfile, outputType) {
  var output = new this.pClass(this.output);
  var params = {
    ewpfile: ewpfile,
    outputType: outputType
  };
  var args = new CMSISAgent2_createNewProject_args(params);
  try {
    output.writeMessageBegin('createNewProject', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_createNewProject = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_createNewProject_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  callback(null);
};

CMSISAgent2Client.prototype.shutdown = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_shutdown();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_shutdown();
  }
};

CMSISAgent2Client.prototype.send_shutdown = function() {
  var output = new this.pClass(this.output);
  var args = new CMSISAgent2_shutdown_args();
  try {
    output.writeMessageBegin('shutdown', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_shutdown = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_shutdown_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  callback(null);
};

CMSISAgent2Client.prototype.activate = function(project, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_activate(project);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_activate(project);
  }
};

CMSISAgent2Client.prototype.send_activate = function(project) {
  var output = new this.pClass(this.output);
  var params = {
    project: project
  };
  var args = new CMSISAgent2_activate_args(params);
  try {
    output.writeMessageBegin('activate', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_activate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_activate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  callback(null);
};

CMSISAgent2Client.prototype.getComponentInfo = function(rte, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getComponentInfo(rte);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getComponentInfo(rte);
  }
};

CMSISAgent2Client.prototype.send_getComponentInfo = function(rte) {
  var output = new this.pClass(this.output);
  var params = {
    rte: rte
  };
  var args = new CMSISAgent2_getComponentInfo_args(params);
  try {
    output.writeMessageBegin('getComponentInfo', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_getComponentInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_getComponentInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getComponentInfo failed: unknown result');
};

CMSISAgent2Client.prototype.getValidationStatus = function(rte, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getValidationStatus(rte);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getValidationStatus(rte);
  }
};

CMSISAgent2Client.prototype.send_getValidationStatus = function(rte) {
  var output = new this.pClass(this.output);
  var params = {
    rte: rte
  };
  var args = new CMSISAgent2_getValidationStatus_args(params);
  try {
    output.writeMessageBegin('getValidationStatus', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_getValidationStatus = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_getValidationStatus_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getValidationStatus failed: unknown result');
};

CMSISAgent2Client.prototype.getApis = function(rte, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getApis(rte);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getApis(rte);
  }
};

CMSISAgent2Client.prototype.send_getApis = function(rte) {
  var output = new this.pClass(this.output);
  var params = {
    rte: rte
  };
  var args = new CMSISAgent2_getApis_args(params);
  try {
    output.writeMessageBegin('getApis', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_getApis = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_getApis_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getApis failed: unknown result');
};

CMSISAgent2Client.prototype.getDeviceInfo = function(rte, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getDeviceInfo(rte);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getDeviceInfo(rte);
  }
};

CMSISAgent2Client.prototype.send_getDeviceInfo = function(rte) {
  var output = new this.pClass(this.output);
  var params = {
    rte: rte
  };
  var args = new CMSISAgent2_getDeviceInfo_args(params);
  try {
    output.writeMessageBegin('getDeviceInfo', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_getDeviceInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_getDeviceInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getDeviceInfo failed: unknown result');
};

CMSISAgent2Client.prototype.getPathToPack = function(packId, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getPathToPack(packId);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getPathToPack(packId);
  }
};

CMSISAgent2Client.prototype.send_getPathToPack = function(packId) {
  var output = new this.pClass(this.output);
  var params = {
    packId: packId
  };
  var args = new CMSISAgent2_getPathToPack_args(params);
  try {
    output.writeMessageBegin('getPathToPack', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_getPathToPack = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_getPathToPack_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getPathToPack failed: unknown result');
};

CMSISAgent2Client.prototype.getPackIdFromPath = function(fileInPack, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getPackIdFromPath(fileInPack);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getPackIdFromPath(fileInPack);
  }
};

CMSISAgent2Client.prototype.send_getPackIdFromPath = function(fileInPack) {
  var output = new this.pClass(this.output);
  var params = {
    fileInPack: fileInPack
  };
  var args = new CMSISAgent2_getPackIdFromPath_args(params);
  try {
    output.writeMessageBegin('getPackIdFromPath', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_getPackIdFromPath = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_getPackIdFromPath_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getPackIdFromPath failed: unknown result');
};

CMSISAgent2Client.prototype.getRteFiles = function(projectName, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_getRteFiles(projectName);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_getRteFiles(projectName);
  }
};

CMSISAgent2Client.prototype.send_getRteFiles = function(projectName) {
  var output = new this.pClass(this.output);
  var params = {
    projectName: projectName
  };
  var args = new CMSISAgent2_getRteFiles_args(params);
  try {
    output.writeMessageBegin('getRteFiles', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_getRteFiles = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_getRteFiles_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('getRteFiles failed: unknown result');
};

CMSISAgent2Client.prototype.openDeviceDialog = function(projectName, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_openDeviceDialog(projectName);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_openDeviceDialog(projectName);
  }
};

CMSISAgent2Client.prototype.send_openDeviceDialog = function(projectName) {
  var output = new this.pClass(this.output);
  var params = {
    projectName: projectName
  };
  var args = new CMSISAgent2_openDeviceDialog_args(params);
  try {
    output.writeMessageBegin('openDeviceDialog', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CMSISAgent2Client.prototype.recv_openDeviceDialog = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CMSISAgent2_openDeviceDialog_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.e) {
    return callback(result.e);
  }
  callback(null);
};
var CMSISAgent2Processor = exports.Processor = function(handler) {
  this._handler = handler;
};
Thrift.inherits(CMSISAgent2Processor, HeartbeatServiceProcessor);
CMSISAgent2Processor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
};
CMSISAgent2Processor.prototype.process_loadProject = function(seqid, input, output) {
  var args = new CMSISAgent2_loadProject_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.loadProject.length === 2) {
    Q.fcall(this._handler.loadProject.bind(this._handler),
      args.ewpfile,
      args.rteConfigFile
    ).then(function(result) {
      var result_obj = new CMSISAgent2_loadProject_result({success: result});
      output.writeMessageBegin("loadProject", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_loadProject_result(err);
        output.writeMessageBegin("loadProject", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("loadProject", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.loadProject(args.ewpfile, args.rteConfigFile, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_loadProject_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("loadProject", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("loadProject", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_createNewProject = function(seqid, input, output) {
  var args = new CMSISAgent2_createNewProject_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.createNewProject.length === 2) {
    Q.fcall(this._handler.createNewProject.bind(this._handler),
      args.ewpfile,
      args.outputType
    ).then(function(result) {
      var result_obj = new CMSISAgent2_createNewProject_result({success: result});
      output.writeMessageBegin("createNewProject", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_createNewProject_result(err);
        output.writeMessageBegin("createNewProject", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createNewProject", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.createNewProject(args.ewpfile, args.outputType, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_createNewProject_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("createNewProject", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("createNewProject", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_shutdown = function(seqid, input, output) {
  var args = new CMSISAgent2_shutdown_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.shutdown.length === 0) {
    Q.fcall(this._handler.shutdown.bind(this._handler)
    ).then(function(result) {
      var result_obj = new CMSISAgent2_shutdown_result({success: result});
      output.writeMessageBegin("shutdown", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_shutdown_result(err);
        output.writeMessageBegin("shutdown", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("shutdown", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.shutdown(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_shutdown_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("shutdown", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("shutdown", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_activate = function(seqid, input, output) {
  var args = new CMSISAgent2_activate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.activate.length === 1) {
    Q.fcall(this._handler.activate.bind(this._handler),
      args.project
    ).then(function(result) {
      var result_obj = new CMSISAgent2_activate_result({success: result});
      output.writeMessageBegin("activate", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_activate_result(err);
        output.writeMessageBegin("activate", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("activate", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.activate(args.project, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_activate_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("activate", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("activate", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_getComponentInfo = function(seqid, input, output) {
  var args = new CMSISAgent2_getComponentInfo_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getComponentInfo.length === 1) {
    Q.fcall(this._handler.getComponentInfo.bind(this._handler),
      args.rte
    ).then(function(result) {
      var result_obj = new CMSISAgent2_getComponentInfo_result({success: result});
      output.writeMessageBegin("getComponentInfo", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_getComponentInfo_result(err);
        output.writeMessageBegin("getComponentInfo", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getComponentInfo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getComponentInfo(args.rte, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_getComponentInfo_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getComponentInfo", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getComponentInfo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_getValidationStatus = function(seqid, input, output) {
  var args = new CMSISAgent2_getValidationStatus_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getValidationStatus.length === 1) {
    Q.fcall(this._handler.getValidationStatus.bind(this._handler),
      args.rte
    ).then(function(result) {
      var result_obj = new CMSISAgent2_getValidationStatus_result({success: result});
      output.writeMessageBegin("getValidationStatus", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_getValidationStatus_result(err);
        output.writeMessageBegin("getValidationStatus", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getValidationStatus", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getValidationStatus(args.rte, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_getValidationStatus_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getValidationStatus", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getValidationStatus", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_getApis = function(seqid, input, output) {
  var args = new CMSISAgent2_getApis_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getApis.length === 1) {
    Q.fcall(this._handler.getApis.bind(this._handler),
      args.rte
    ).then(function(result) {
      var result_obj = new CMSISAgent2_getApis_result({success: result});
      output.writeMessageBegin("getApis", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_getApis_result(err);
        output.writeMessageBegin("getApis", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getApis", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getApis(args.rte, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_getApis_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getApis", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getApis", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_getDeviceInfo = function(seqid, input, output) {
  var args = new CMSISAgent2_getDeviceInfo_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getDeviceInfo.length === 1) {
    Q.fcall(this._handler.getDeviceInfo.bind(this._handler),
      args.rte
    ).then(function(result) {
      var result_obj = new CMSISAgent2_getDeviceInfo_result({success: result});
      output.writeMessageBegin("getDeviceInfo", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_getDeviceInfo_result(err);
        output.writeMessageBegin("getDeviceInfo", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getDeviceInfo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getDeviceInfo(args.rte, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_getDeviceInfo_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getDeviceInfo", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getDeviceInfo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_getPathToPack = function(seqid, input, output) {
  var args = new CMSISAgent2_getPathToPack_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getPathToPack.length === 1) {
    Q.fcall(this._handler.getPathToPack.bind(this._handler),
      args.packId
    ).then(function(result) {
      var result_obj = new CMSISAgent2_getPathToPack_result({success: result});
      output.writeMessageBegin("getPathToPack", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_getPathToPack_result(err);
        output.writeMessageBegin("getPathToPack", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getPathToPack", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getPathToPack(args.packId, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_getPathToPack_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getPathToPack", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getPathToPack", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_getPackIdFromPath = function(seqid, input, output) {
  var args = new CMSISAgent2_getPackIdFromPath_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getPackIdFromPath.length === 1) {
    Q.fcall(this._handler.getPackIdFromPath.bind(this._handler),
      args.fileInPack
    ).then(function(result) {
      var result_obj = new CMSISAgent2_getPackIdFromPath_result({success: result});
      output.writeMessageBegin("getPackIdFromPath", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_getPackIdFromPath_result(err);
        output.writeMessageBegin("getPackIdFromPath", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getPackIdFromPath", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getPackIdFromPath(args.fileInPack, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_getPackIdFromPath_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getPackIdFromPath", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getPackIdFromPath", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_getRteFiles = function(seqid, input, output) {
  var args = new CMSISAgent2_getRteFiles_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.getRteFiles.length === 1) {
    Q.fcall(this._handler.getRteFiles.bind(this._handler),
      args.projectName
    ).then(function(result) {
      var result_obj = new CMSISAgent2_getRteFiles_result({success: result});
      output.writeMessageBegin("getRteFiles", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_getRteFiles_result(err);
        output.writeMessageBegin("getRteFiles", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getRteFiles", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.getRteFiles(args.projectName, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_getRteFiles_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("getRteFiles", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("getRteFiles", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CMSISAgent2Processor.prototype.process_openDeviceDialog = function(seqid, input, output) {
  var args = new CMSISAgent2_openDeviceDialog_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.openDeviceDialog.length === 1) {
    Q.fcall(this._handler.openDeviceDialog.bind(this._handler),
      args.projectName
    ).then(function(result) {
      var result_obj = new CMSISAgent2_openDeviceDialog_result({success: result});
      output.writeMessageBegin("openDeviceDialog", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.CMSISAgentException) {
        result = new CMSISAgent2_openDeviceDialog_result(err);
        output.writeMessageBegin("openDeviceDialog", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("openDeviceDialog", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.openDeviceDialog(args.projectName, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.CMSISAgentException) {
        result_obj = new CMSISAgent2_openDeviceDialog_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("openDeviceDialog", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("openDeviceDialog", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
